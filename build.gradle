buildscript {
    ext.kotlin_version = "1.3.41"
    ext.junit5_version = "5.6.1"
    ext.junit4_version = "4.12"
    ext.mockk_version = "1.8.9"
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlin_version"
        classpath "gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0"
    }
}
plugins {
    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "java"
    id "org.flywaydb.flyway" version "6.3.2"
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
}

apply plugin: "io.spring.dependency-management"
apply plugin: "kotlin"
apply plugin: "org.jetbrains.kotlin.plugin.jpa"
apply plugin: "com.palantir.docker"

group = "com.webledger"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "1.8"

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.session:spring-session-bom:Corn-SR2'
    }
}

dependencies {
    compile group: "com.fasterxml.jackson.module", name: "jackson-module-jsonSchema", version: "2.7.4"
    compile group: "com.fasterxml.jackson.module", name: "jackson-module-kotlin", version: "2.7.9.1"

    runtimeOnly "com.h2database:h2"
    compile group: "org.postgresql", name: "postgresql"
    compile group: "org.flywaydb", name: "flyway-core"

    compileOnly "org.projectlombok:lombok:1.18.6"
    annotationProcessor "org.projectlombok:lombok:1.18.6"

    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.apache.logging.log4j:log4j-api-kotlin:1.0.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "io.springfox:springfox-swagger2:2.7.0"
    compile "io.springfox:springfox-swagger-ui:2.7.0"
    compile "org.springframework.session:spring-session-jdbc"
    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    runtimeOnly "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.security:spring-security-test"
    testImplementation "org.springframework.boot:spring-boot-starter-test"

    testImplementation "org.junit.jupiter:junit-jupiter:$junit5_version"
    testImplementation "io.mockk:mockk:$mockk_version"
}

compileKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

compileTestKotlin {
  kotlinOptions {
    jvmTarget = "1.8"
  }
}

test {
    useJUnitPlatform()
}

task unpack(type: Copy) {
  dependsOn bootJar
  from(zipTree(tasks.bootJar.outputs.files.singleFile))
  into("build/dependency")
}

docker {
  name "${project.group}/${bootJar.baseName}"
  copySpec.from(tasks.unpack.outputs).into("dependency")
  buildArgs(["DEPENDENCY": "dependency"])
}

